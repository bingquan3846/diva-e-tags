<?php
namespace Divae\NewsletterCr\Controller;

/***************************************************************
 *
 *  Copyright notice
 *
 *  (c) 2017 Bingquan Bao <bingquan.bao@diva-e.com>, diva-e zerosone
 *
 *  All rights reserved
 *
 *  This script is part of the TYPO3 project. The TYPO3 project is
 *  free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *
 *  This script is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This copyright notice MUST APPEAR in all copies of the script!
 ***************************************************************/

use Divae\NewsletterCr\Domain\Model\Users;
use Ouzo\Utilities\Date;
use TYPO3\CMS\Core\Utility\GeneralUtility;
use TYPO3\CMS\Extbase\Mvc\View\JsonView;
use Divae\NewsletterCr\Service\RestService;
use TYPO3\CMS\Core\Utility\ExtensionManagementUtility;

/**
 * UsersController
 */
class UsersController extends \TYPO3\CMS\Extbase\Mvc\Controller\ActionController
{

    /**
     * usersRepository
     *
     * @var \Divae\NewsletterCr\Domain\Repository\UsersRepository
     * @inject
     */
    protected $usersRepository = NULL;

    protected $tokenPath = NULL;

    public function initializeAction()
    {
        parent::initializeAction(); // TODO: Change the autogenerated stub

        $actionName = $this->request->getControllerActionName();
        if($actionName == 'subscribe') {
            $this->defaultViewObjectName = JsonView::class;
        }

        $this->tokenPath = ExtensionManagementUtility::extPath('newsletter_cr') . 'token' . $this->settings['group_id'];

        $this->restService = new RestService("https://rest.cleverreach.com/v2");
    }

    /**
     * action list
     *
     * @return void
     */
    public function listAction()
    {
        $users = $this->usersRepository->findAll();
        $this->view->assign('users', $users);
    }
    
    public function showFormAction()
    {

        $user = new Users();
        $this->view->assign('user', $user);

        $this->view->assign('formAction', $this->request->getRequestUri());

        if(!file_exists($this->tokenPath)){

            $token = $this->restService->post('/login',
                array(
                    "client_id"=> $this->settings['client_id'],
                    "login"=> $this->settings['login'],
                    "password"=> $this->settings['password']
                )
            );

            GeneralUtility::writeFile($this->tokenPath, $token);
        }

    }
    
    public function subscribeAction()
    {
        $token = file_get_contents($this->tokenPath);
        $this->restService->setAuthMode("jwt", $token);

        $arguments = $this->request->getArguments();

        if( !empty($arguments['email']) && \TYPO3\CMS\Core\Utility\GeneralUtility::validEmail($arguments['email'])){
            // insert into clever reach group
            $receivers[] = array(
                "email"				=> $arguments['email'],
                "global_attributes"	=> array(
                    "firstname" => $arguments['firstname'],
                    "lastname" => $arguments['lastname'],
                    "position" => $arguments['position'],
                    "company"  => $arguments['company']
                ),
                "registered"		=> time(),	//current date
                "activated"			=> 0,
            );
            $exists = $this->restService->get("/groups/" . $this->settings['group_id']. "/receivers/" . $arguments['email']);
            $success  = false;
            if(empty($exists)){
                $success = $this->restService->post("/groups/" . $this->settings['group_id']. "/receivers", $receivers);
            }
            if( $success || (!empty($exists) && !$exists->activated)){
                    $activateEmail = $this->restService->post("/forms/" .$this->settings["form_id"] . "/send/activate", array(
                        "email" => $arguments["email"],
                        'groups_id' => $this->settings['group_id'],
                        "global_attributes"	=> array(
                            "firstname" => $arguments['firstname'],
                            "lastname" => $arguments['lastname'],
                            "position" => $arguments['position'],
                            "company"  => $arguments['company']
                        ),
                        "doidata" => array(
                            "user_ip" => $_SERVER["REMOTE_ADDR"],
                            "referer" => $_SERVER["SERVER_NAME"].$_SERVER["REQUEST_URI"],
                            "user_agent" => $_SERVER["HTTP_USER_AGENT"]
                        )
                    ));

                    if($activateEmail){
                        $users = $this->usersRepository->findByEmail($arguments['email']);
                        if(!$users->count()){
                            $user = new Users();
                            $user->setEmail($arguments['email']);
                            $date = new \DateTime();
                            $user->setRegister($date);
                            $user->setFirstname($arguments['firstname']);
                            $user->setLastname($arguments['lastname']);
                            $user->setCompany($arguments['company']);
                            $user->setPosition($arguments['position']);
                            $persistenceManager = $this->objectManager->get("TYPO3\\CMS\\Extbase\\Persistence\\Generic\\PersistenceManager");
                            $persistenceManager->add($user);
                            $persistenceManager->persistAll();
                        }

                    }
                    echo json_encode(array('status' => 1));
            }

            if(!empty($exists) && $exists->activated){
                    echo json_encode(array('status' => 2));
            }

        }else{
            echo json_encode(array('status' => -1));
        }

        die();

    }

}